The file you want to edit is db / query.py. The file presents function templates that need to be supplemented. The solution must be a query.py file.

Subject Area - Blogs and Topics:


class User(models.Model):
   first_name = models.CharField(max_length=255)
   last_name = models.CharField(max_length=255)

class Blog(models.Model):
   title = models.CharField(max_length=255)
   author = models.ForeignKey(User)
   created = models.DateTimeField(default=timezone.now())

   subscribers = models.ManyToManyField(User, related_name='subscriptions')

class Topic(models.Model):
   title = models.CharField(max_length=255)
   blog = models.ForeignKey(Blog)
   author = models.ForeignKey(User)
   created = models.DateTimeField(default=timezone.now())

   likes = models.ManyToManyField(User, related_name='likes')




Requests must be written:
1. Create (create function):
Create user first_name = u1, last_name = u1.
Create user first_name = u2, last_name = u2.
Create user first_name = u3, last_name = u3.
Create a blog title = blog1, author = u1.
Create a blog title = blog2, author = u1.
Sign u1 u2 users on blog1, u2 on blog2.
Create topic title = topic1, blog = blog1, author = u1.
Create topic title = topic2_content, blog = blog1, author = u3, created = 2017-01-01.
Like topic1 users u1, u2, u3.
2. Editing:

Change first_name to uu1 for all users (edit_all function).
Change first_name to uu1 for users who have first_name u1 or u2 (edit_u1_u2 function).
3. Removal:

delete user with first_name u1 (delete_u1 function).
unsubscribe user with first_name u2 from blogs (unsubscribe_u2_from_blogs function).
4. Find topics that have a creation date longer than 2018-01-01 (get_topic_created_grated).

5. Find the topic whose title ends with content (get_topic_title_ended function).

6. Get 2 first users (sort in reverse order by id) (get_user_with_limit function).

7. Get the number of topics in each blog, name the topic_count field, sort by topic_count ascending (get_topic_count function).

8. Get the average number of blog topics (get_avg_topic_count).

9. Find blogs with more than one topic (get_blog_that_have_more_than_one_topic).

10. Get all the topics of the author with the first_name u1 (function get_topic_by_u1).

11. Find non-blogging users by ascending id (get_user_that_dont_have_blog function).

12. Find the topic that all users liked (get_topic_that_like_all_users function).

13. Find topics that do not have likes (get_topic_that_dont_have_like function).
